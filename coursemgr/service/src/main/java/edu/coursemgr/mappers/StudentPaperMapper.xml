<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.coursemgr.dao.StudentPaperMapper" >
  <resultMap id="BaseResultMap" type="edu.coursemgr.model.StudentPaper" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="taskId" property="taskId" jdbcType="INTEGER" />
    <result column="studentNo" property="studentNo" jdbcType="VARCHAR" />
    <result column="questionId" property="questionId" jdbcType="BIGINT" />
    <result column="questionType" property="questionType" jdbcType="VARCHAR" />
    <result column="answers" property="answers" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="REAL" />
    <result column="teacherScore" property="teacherScore" jdbcType="REAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,taskId, studentNo, questionId, questionType, answers, score,teacherScore
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from student_paper
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectSomeByCourseStu" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from student_paper
    where studentNo = #{studentNo,jdbcType=VARCHAR}
    and taskId in (select id from course_tasks where courseId = #{courseId,jdbcType=INTEGER})
  </select>
  <select id="getPaperByStudent" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from student_paper
    where studentNo = #{studentNo,jdbcType=VARCHAR}
    and taskId=#{taskId, jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_paper
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByTaskId" parameterType="java.lang.Integer" >
    delete from student_paper
    where taskId = #{taskId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCourseIds" parameterType="java.lang.String" >
    delete from student_paper
    where taskId in (select id from course_tasks
    where courseId in (#{courseIds, jdbcType=VARCHAR}))
  </delete>
  <delete id="deleteByCourseStudent" parameterType="java.util.HashMap" >
    delete from student_paper
    where taskId in (select id from course_tasks
    where courseId = #{courseId, jdbcType=INTEGER})
    and studentNo = #{studentNo, jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="edu.coursemgr.model.StudentPaper" >
    insert into student_paper (id, taskId,studentNo, questionId, questionType,
      answers, score, teacherScore)
    values (#{id,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{studentNo,jdbcType=VARCHAR}, #{questionId,jdbcType=BIGINT},
    #{questionType,jdbcType=VARCHAR},#{answers,jdbcType=VARCHAR}, #{score,jdbcType=REAL}, #{teacherScore,jdbcType=REAL})
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into group_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        taskId,
      </if>
      <if test="studentNo != null" >
        studentNo,
      </if>
      <if test="questionId != null" >
        questionId,
      </if>
      <if test="questionType != null" >
        questionType,
      </if>
      <if test="answers != null" >
        answers,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="teacherScore != null" >
        teacherScore,
      </if>
    </trim>
    values
    <foreach collection="studentPapers" item="item" index="key"  separator=",">
      <!--<trim prefix="values (" suffix=")" suffixOverrides="," >-->
      (
      <if test="item.taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="item.studentNo != null" >
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="item.questionId != null" >
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="item.questionType != null" >
        #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="item.answers != null" >
        #{answers,jdbcType=VARCHAR},
      </if>
      <if test="item.score != null" >
        #{score,jdbcType=REAL},
      </if>
      <if test="item.teacherScore != null" >
        #{teacherScore,jdbcType=REAL},
      </if>
      )
      <!--</trim>-->
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="edu.coursemgr.model.StudentPaper" >
    insert into student_paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="taskId != null" >
        taskId,
      </if>
      <if test="studentNo != null" >
        studentNo,
      </if>
      <if test="questionId != null" >
        questionId,
      </if>
      <if test="questionType != null" >
        questionType,
      </if>
      <if test="answers != null" >
        answers,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="teacherScore != null" >
        teacherScore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="studentNo != null" >
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="questionType != null" >
        #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="answers != null" >
        #{answers,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=REAL},
      </if>
      <if test="teacherScore != null" >
        #{teacherScore,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.coursemgr.model.StudentPaper" >
    update student_paper
    <set >
      <if test="taskId != null" >
        taskId = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="studentNo != null" >
        studentNo = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null" >
        questionId = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="questionType != null" >
        questionType = #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="answers != null" >
        answers = #{answers,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=REAL},
      </if>
      <if test="teacherScore != null" >
        teacherScore = #{teacherScore,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByStudent" parameterType="edu.coursemgr.model.StudentPaper" >
    update student_paper
    <set >
      <if test="questionType != null" >
        questionType = #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="answers != null" >
        answers = #{answers,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=REAL},
      </if>
      <if test="teacherScore != null" >
        teacherScore = #{teacherScore,jdbcType=REAL},
      </if>
    </set>
    where studentNo = #{studentNo,jdbcType=VARCHAR}
    and questionId = #{questionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.coursemgr.model.StudentPaper" >
    update student_paper
    set taskId = #{taskId,jdbcType=INTEGER},
    studentNo = #{studentNo,jdbcType=VARCHAR},
      questionId = #{questionId,jdbcType=BIGINT},
      questionType = #{questionType,jdbcType=VARCHAR},
      answers = #{answers,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL},
      teacherScore = #{teacherScore,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
