<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.coursemgr.dao.CourseTasksMapper" >
  <resultMap id="BaseResultMap" type="edu.coursemgr.model.CourseTasks" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="courseId" property="courseId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="REAL" />
    <result column="publishTime" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="deadline" property="deadline" jdbcType="TIMESTAMP" />
    <result column="totalScore" property="totalScore" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, courseId, name, weight, publishTime, deadline, totalScore
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course_tasks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_tasks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.coursemgr.model.CourseTasks" >
    insert into course_tasks (id, courseId, name, 
      weight, publishTime, deadline, 
      totalScore)
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{weight,jdbcType=REAL}, #{publishTime,jdbcType=TIMESTAMP}, #{deadline,jdbcType=TIMESTAMP},
      #{totalScore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.coursemgr.model.CourseTasks" >
    insert into course_tasks
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        courseId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="publishTime != null" >
        publishTime,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="totalScore != null" >
        totalScore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=REAL},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="totalScore != null" >
        #{totalScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.coursemgr.model.CourseTasks" >
    update course_tasks
    <set >
      <if test="courseId != null" >
        courseId = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=REAL},
      </if>
      <if test="publishTime != null" >
        publishTime = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="totalScore != null" >
        totalScore = #{totalScore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.coursemgr.model.CourseTasks" >
    update course_tasks
    set courseId = #{courseId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=REAL},
      publishTime = #{publishTime,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      totalScore = #{totalScore,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>