<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.coursemgr.dao.GroupMemberMapper" >
  <resultMap id="BaseResultMap" type="edu.coursemgr.model.GroupMember" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="groupId" property="groupId" jdbcType="INTEGER" />
    <result column="studentNo" property="studentNo" jdbcType="VARCHAR" />
    <result column="courseId" property="courseId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, groupId, studentNo,gradeObjNo, courseId
  </sql>
  <select id="updateById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from group_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCourseId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from group_member
    where courseId = #{courseId,jdbcType=INTEGER} order by groupId asc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from group_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.coursemgr.model.GroupMember" >
    insert into group_member ( groupId, studentNo,courseId
      )
    values ( #{groupId,jdbcType=INTEGER},
    #{studentNo,jdbcType=VARCHAR},  #{courseId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.coursemgr.model.GroupMember" >
    insert into group_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupId != null" >
        groupId,
      </if>
      <if test="studentNo != null" >
        studentNo,
      </if>
      <if test="courseId != null" >
        courseId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="studentNo != null" >
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into group_member(groupId, studentNo, courseId)
    <!--<trim prefix="(" suffix=")" suffixOverrides="," >-->
      <!--<if test="groupId != null" >-->
        <!--groupId,-->
      <!--</if>-->
      <!--<if test="studentNo != null" >-->
        <!--studentNo,-->
      <!--</if>-->
      <!--<if test="courseId != null" >-->
        <!--courseId,-->
      <!--</if>-->
    <!--</trim>-->
    values
    <foreach collection="list" item="item" index="key"  separator=",">
      <!--<trim prefix="values (" suffix=")" suffixOverrides="," >-->
      (#{groupId,jdbcType=INTEGER},#{studentNo,jdbcType=VARCHAR},#{courseId,jdbcType=INTEGER})
        <!--<if test="item.groupId != null" >-->
          <!--#{groupId,jdbcType=INTEGER},-->
        <!--</if>-->
        <!--<if test="item.studentNo != null" >-->
          <!--#{studentNo,jdbcType=VARCHAR},-->
        <!--</if>-->
        <!--<if test="item.studentNo != null" >-->
          <!--#{courseId,jdbcType=INTEGER},-->
        <!--</if>-->
      <!--</trim>-->
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.coursemgr.model.GroupMember" >
    update group_member
    <set >
      <if test="groupId != null" >
        groupId = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="studentNo != null" >
        studentNo = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        courseId = #{courseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.coursemgr.model.GroupMember" >
    update group_member
    set groupId = #{groupId,jdbcType=INTEGER},
      studentNo = #{studentNo,jdbcType=VARCHAR},
    courseId = #{courseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>