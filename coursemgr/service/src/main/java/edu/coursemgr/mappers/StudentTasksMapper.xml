<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.coursemgr.dao.StudentTasksMapper" >
  <resultMap id="BaseResultMap" type="edu.coursemgr.model.StudentTasks" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentNo" property="studentNo" jdbcType="VARCHAR" />
    <result column="taskId" property="taskId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="score" property="score" jdbcType="REAL" />
    <result column="submitTime" property="submitTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="StudentTaskDetailMap" type="edu.coursemgr.pojo.StudentTaskDetail" >
    <result column="groupId" property="groupId" jdbcType="INTEGER" />
    <result column="studentNo" property="studentNo" jdbcType="VARCHAR" />
    <result column="studentName" property="studentName" jdbcType="VARCHAR" />
    <result column="taskId" property="taskId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="score" property="score" jdbcType="REAL" />
  </resultMap>
  <resultMap id="SelfTaskSituationMap" type="edu.coursemgr.pojo.StudentTaskSituation" >
    <result column="taskId" property="taskId" jdbcType="VARCHAR" />
    <result column="finishStatus" property="finishStatus" jdbcType="VARCHAR" />
    <result column="publishTime" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="deadline" property="deadline" jdbcType="TIMESTAMP" />
    <result column="taskName" property="taskName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, studentNo, taskId, status, score, submitTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_tasks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectStuTaskList" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from student_tasks
    where taskId in (select id from course_tasks where courseId = #{courseId,jdbcType=INTEGER})
    and studentNo = #{studentNo, jdbcType=VARCHAR}
  </select>
  <select id="selectByStudent" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from student_tasks
    where taskId = #{taskId,jdbcType=VARCHAR}
    and studentNo = #{studentNo, jdbcType=VARCHAR}
  </select>
  <select id="selectTaskFinshedCnt" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
    select
    count(studentNo)
    from student_tasks
    where taskId = #{taskId,jdbcType=VARCHAR}
    and status = 'FINISHED'
  </select>
  <select id="getStudentTaskSituation" resultMap="StudentTaskDetailMap" parameterType="java.util.HashMap" >
    select
    gm.groupId, cs.studentNo, u.name as studentName, st.taskId, st.status, st.score
    from course_students cs
    left join student_tasks st
    on st.taskId=#{taskId, jdbcType=VARCHAR} and st.studentNo=cs.studentNo
    left join group_member gm on gm.studentNo = st.studentNo
    left join user u on u.serialNo = cs.studentNo
    where cs.courseId=#{courseId, jdbcType=INTEGER}
  </select>
  <select id="getSelfTaskSituation" resultMap="SelfTaskSituationMap" parameterType="java.util.HashMap" >
    select st.taskId, st.status as finishStatus, ct.publishTime,
    ct.deadline, ct.name as taskName from student_tasks st
    left join course_tasks ct on  ct.courseId=#{courseId, jdbcType=INTEGER}
    and ct.id=st.taskId where st.studentNo=#{studentNo, jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_tasks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByTaskId" parameterType="java.lang.Integer" >
    delete from student_tasks
    where taskId = #{taskId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCourseIds" parameterType="java.lang.String" >
    delete from student_tasks
    where taskId in (select id from course_tasks
    where courseId in (#{courseIds, jdbcType=VARCHAR}))
  </delete>
  <delete id="deleteByCourseStudent" parameterType="java.util.HashMap" >
    delete from student_tasks
    where taskId in (select id from course_tasks
    where courseId = #{courseId, jdbcType=INTEGER})
    and studentNo=#{studentNo, jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="edu.coursemgr.model.StudentTasks" >
    insert into student_tasks (id, studentNo, taskId, 
      status, score, submitTime
      )
    values (#{id,jdbcType=INTEGER}, #{studentNo,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR},
      #{status,jdbcType=CHAR}, #{score,jdbcType=REAL}, #{submitTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.coursemgr.model.StudentTasks" >
    insert into student_tasks
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentNo != null" >
        studentNo,
      </if>
      <if test="taskId != null" >
        taskId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="submitTime != null" >
        submitTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentNo != null" >
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=REAL},
      </if>
      <if test="submitTime != null" >
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByStudentTask" parameterType="edu.coursemgr.model.StudentTasks" >
    update student_tasks
    <set >
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=REAL},
      </if>
    </set>
    where taskId = #{taskId,jdbcType=VARCHAR}
    and studentNo = #{studentNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.coursemgr.model.StudentTasks" >
    update student_tasks
    <set >
      <if test="studentNo != null" >
        studentNo = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        taskId = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=REAL},
      </if>
      <if test="submitTime != null" >
        submitTime = #{submitTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.coursemgr.model.StudentTasks" >
    update student_tasks
    set studentNo = #{studentNo,jdbcType=VARCHAR},
      taskId = #{taskId,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      score = #{score,jdbcType=REAL},
      submitTime = #{submitTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateStatus" parameterType="java.util.HashMap" >
    update student_tasks
    set status = #{status,jdbcType=CHAR}
    where taskId = #{taskId,jdbcType=VARCHAR}
    and studentNo = #{studentNo,jdbcType=VARCHAR}
  </update>
</mapper>