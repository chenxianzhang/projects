<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.coursemgr.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="edu.coursemgr.model.Course" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="creatorNo" property="creatorNo" jdbcType="VARCHAR" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="groupingType" property="groupingType" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="edu.coursemgr.model.Course" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, credit, creatorNo, createDate, groupingType
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
  </select>
  <select id="selectTeacherCourse" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where creatorNo = #{teacherNo,jdbcType=VARCHAR}
  </select>
  <select id="selectStuCourse" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where id in (select courseId from course_students where studentNo = #{stuNo,jdbcType=VARCHAR})
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.coursemgr.model.Course" >
    insert into course (id, name, credit, 
      creatorNo, createDate, groupingType, 
      description)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{credit,jdbcType=INTEGER}, 
      #{creatorNo,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{groupingType,jdbcType=VARCHAR},
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.coursemgr.model.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="creatorNo != null" >
        creatorNo,
      </if>
      <if test="createDate != null" >
        createDate,
      </if>
      <if test="groupingType != null" >
        groupingType,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="creatorNo != null" >
        #{creatorNo,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="groupingType != null" >
        #{groupingType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="edu.coursemgr.model.Course" >
    update course
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="creatorNo != null" >
        creatorNo = #{creatorNo,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="groupingType != null" >
        groupingType = #{groupingType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByIdWithBLOBs" parameterType="edu.coursemgr.model.Course" >
    update course
    set name = #{name,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      creatorNo = #{creatorNo,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      groupingType = #{groupingType,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="edu.coursemgr.model.Course" >
    update course
    set name = #{name,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      creatorNo = #{creatorNo,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      groupingType = #{groupingType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>